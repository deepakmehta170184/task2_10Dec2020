[{"C:\\xampp\\htdocs\\task2_10Dec2020\\src\\index.js":"1","C:\\xampp\\htdocs\\task2_10Dec2020\\src\\App.js":"2","C:\\xampp\\htdocs\\task2_10Dec2020\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\task2_10dec2020\\src\\index.js":"4","C:\\xampp\\htdocs\\task2_10dec2020\\src\\App.js":"5","C:\\xampp\\htdocs\\task2_10dec2020\\src\\reportWebVitals.js":"6","C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\HomeData.jsx":"7","C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\Pagination.jsx":"8","C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\util\\FetchHomeData.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":528,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":568,"mtime":1608017369046,"results":"14","hashOfConfig":"15"},{"size":192,"mtime":1608017532324,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1607966111492,"results":"17","hashOfConfig":"15"},{"size":3368,"mtime":1608211369673,"results":"18","hashOfConfig":"15"},{"size":406,"mtime":1608018116152,"results":"19","hashOfConfig":"15"},{"size":309,"mtime":1608212213410,"results":"20","hashOfConfig":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yjeivm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ef36jm",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\task2_10Dec2020\\src\\index.js",[],"C:\\xampp\\htdocs\\task2_10Dec2020\\src\\App.js",[],"C:\\xampp\\htdocs\\task2_10Dec2020\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\index.js",[],["40","41"],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\App.js",[],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\HomeData.jsx",["42","43","44","45","46"],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\Pagination.jsx",[],"C:\\xampp\\htdocs\\task2_10dec2020\\src\\component\\util\\FetchHomeData.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":22,"nodeType":"53","messageId":"54","endLine":11,"endColumn":36},{"ruleId":"51","severity":1,"message":"55","line":20,"column":23,"nodeType":"53","messageId":"54","endLine":20,"endColumn":38},{"ruleId":"51","severity":1,"message":"56","line":22,"column":21,"nodeType":"53","messageId":"54","endLine":22,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":31,"column":12,"nodeType":"59","endLine":40,"endColumn":3},{"ruleId":"60","severity":1,"message":"61","line":102,"column":11,"nodeType":"62","endLine":102,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'setOverlayKind' is assigned a value but never used.","Identifier","unusedVar","'setUsersPerPage' is assigned a value but never used.","'setJsonColumn' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]